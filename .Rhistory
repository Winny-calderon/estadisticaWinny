library(haven)
data <- read_sav("C:/Users/WINNY CALDERON/Downloads/LAPOP20172016.sav")
View(data)
x <- 8
z <- 10
x+z
name(data)
library(haven)
dato <- read_sav("C:/Users/WINNY CALDERON/Downloads/LAPOP20172016.sav")
View(dato)
name(dato)
ame(dato)
name(dato)
View(data)
name(data)
name (data)
names(data)
str(data)
data$q1=as.factor(data$q1)
install.packages("rio")
library(rio)
library(rio)
link_del_github="https://github.com/DataPolitica/salidas/raw/master/Data/trabajadores.sav"
trabajadores=import(link_del_github)
names(trabajadores)
setwd("~/PUCP/6to CICLO/ANAL POL COMPARADO (POL231)/Estadística/estadisticaWinny")
lkexcel="https://github.com/PoliticayGobiernoPUCP/estadistica_anapol2/raw/master/DATA/viaticos_2018_nac.xlsx"
download.file(lkexcel, "file.xlsx")
library(rio)
viaticos <- import_list('file.xlsx',rbind = TRUE)
install.packages("tidyr")
library(htmltab)
library(stringr) #para limpieza de columnas (extracción de numeros, particiones)
library(readr)
url1 = "https://www.cia.gov/library/publications/resources/the-world-factbook/fields/211rank.html"
gdp = htmltab(doc = url1,
which ='//*[@id="rankOrder"]', #herramientas de desarrollador
encoding = "UTF-8")
View(gdp)
names(gdp)
str(gdp)
gdp = gdp[,c(2,3)]
gdp = gdp[,c(2,3)]
gdp = gdp[,c(2,3)]
names(gdp) = c("Pais", "PBI")
summary(gdp)
gdp$pbi =   gsub("\\$", "", gdp$PBI)
gdp$pbi =   gsub(",", "", gdp$pbi)
gdp = gdp[,-2]
gdp$pbi = as.numeric(gdp$pbi)
str(gdp$pbi)
summary(gdp$pbi)
url2 = "https://www.cia.gov/library/publications/resources/the-world-factbook/fields/349.html"
urban = htmltab(doc = url2,
which ='//*[@id="fieldListing"]', #herramientas de desarrollador
encoding = "UTF-8")
str(urban)
head(urban)
names(urban)
View(urban)
names(urban) = c("Pais", "Urbano")
names(urban)
#Separamos las columnas
urban$urbano = parse_number(urban$Urbano)
urban = urban[,-2]
url3 = "https://www.cia.gov/library/publications/resources/the-world-factbook/fields/274.html"
cdio = htmltab(doc = url3,
which ='//*[@id="fieldListing"]', #herramientas de desarrollador
encoding = "UTF-8")
names(cdio)
str(cdio)
head(cdio)
names(cdio)
names(cdio) = c("Pais", "co2")
names(cdio)
View(cdio)
head(cdio)
cdio$var1 = cdio$`co2`
cdio$numeros = parse_number(cdio$var1)
cdio$mult = str_split(string = cdio$var1,
pattern = ' ',
simplify = T)[,2]
table(cdio$mult)
cdio$mult = gsub('million',10^6,cdio$mult) # reemplaza la palabra million por el número correspondiente.
cdio$mult = gsub('billion',10^9,cdio$mult) # reemplaza la palabra billion por el número correspondiente.
cdio$mult = gsub('Mt\\(2010',"1",cdio$mult)
cdio$mult = gsub('Mt\\(2012',"1",cdio$mult)
cdio$mult = gsub('Mt\\(2017',"1",cdio$mult) # reemplaza el resto por el número 1.
cdio$mult = as.numeric(cdio$mult)
cdio$final = (cdio$numeros*cdio$mult)
cdio$final = (cdio$final/10^6)
cdio=cdio[,-c(2:5)]
####################################################
names(urban)
names(gdp)
#entonces le pedimos que nos fusione las datas en base a la variable común: país
total1=merge(urban,gdp,by.x='Pais', by.y='Pais')
head(total1)
View(total1)
total2=merge(urban,gdp,all.x=T,all.y=T) #nos aseguramos de incluir todos nuestros casos
#esto signfica que estamos pidiendo que "todos los valores de X sean incluidos" y también "todos los valores de y". Presupone que la primera columna será la columna guía
head(total2)
View(total2)
total1[duplicated(total1$Pais),]
#verifica si en la columna país hay duplicados.
total1[duplicated(total1$Pais),]
total2[!complete.cases(total2),] #para verificar si hay casos en una base de datos que no hay en la otra
total2[!complete.cases(total2),]
total=merge(total2,cdio,all.x=T,all.y=T)
head(total)
View(total2)
View(total)
total[duplicated(total$Pais),]
total[!complete.cases(total),]
total[duplicated(total$Pais),]
total[!complete.cases(total),]
total[grep("World|Euro",total$Pais),]
total[grep("World|Euro",total$Pais),]
total=total[-grep("World|Euro",total$Pais),]
?grep
total[grep("World|Euro",total$Pais),] #muestrame casos que tenga world o euro
total=total[-grep("World|Euro",total$Pais),]
total=merge(total2,cdio,all.x=T,all.y=T)
head(total)
total[duplicated(total$Pais),]
total[!complete.cases(total),]
total=total[-grep("World|Euro",total$Pais),]
library(htmltab)
income = htmltab(doc = link1,
which ='//*[@id="fieldListing"]',
encoding = "UTF-8")
link1 = "https://www.cia.gov/library/publications/resources/the-world-factbook/fields/223.html"
link2 ="https://www.cia.gov/library/publications/resources/the-world-factbook/fields/225.html"
income = htmltab(doc = link1,
which ='//*[@id="fieldListing"]',
encoding = "UTF-8")
taxes = htmltab(doc = link2,
which ='//*[@id="fieldListing"]',
encoding = "UTF-8")
View(income)
names(income)
View(taxes)
names(income) = c("Country", "Distribution")
names(income)
summary(income)
names(income) = c("Country", "Distribution")
income[!complete.cases(income),]
parse_number(income$Distribution)
income$Distribution = parse_number(income$Distribution)
str(income)
summary(income)
names(taxes)
link2 ="https://www.cia.gov/library/publications/resources/the-world-factbook/fields/225.html"
taxes1 = htmltab(doc = link2,
which ='//*[@id="fieldListing"]',
encoding = "UTF-8")
names(taxes1)
names(taxes1) = c("Country", "Taxes")
View(taxes1)
summary(income)
summary(taxes1)
taxes1[!complete.cases(taxes1),]
library(stringr)
str_split(string = taxes1$Taxes,
pattern = '%',
simplify = T)
data$taxes= str_split(string = taxes1$Taxes,
pattern = '%',
simplify = T)[,1]
taxes1$taxes= str_split(string = taxes1$Taxes,
pattern = '%',
simplify = T)[,1]
taxes1$Taxes=NULL
str(taxes1)
taxes1$taxes = as.numeric(taxes1$taxes)
str(taxes1)
merge(income,taxes1,by.x='Country', by.y='Country')
base_final=merge(income,taxes1,by.x='Country', by.y='Country')
plox(income,taxes)
plot(income,taxes)
plot(income,taxes)
plot(Distribution,taxes)
plot(Distribution,taxes)
names(income)
names(income) = c("Country", "Distribution")
summary(income)
income$Distribution = parse_number(income$Distribution)
income$Distribution = parse_number(income$Distribution)
income[!complete.cases(income),]
income$Distribution = parse_number(income$Distribution)
plot(Distribution,taxes)
plot(Distribution,taxes)
plot(Distribution,taxes)
plot(Distribution,taxes)
plot(Distribution,taxes)
str(taxes1)
taxes1$taxes = as.numeric(taxes1$taxes)
plot(Distribution,taxes)
plot(Distribution, taxes)
plot(Distribution,taxes)
plot(Distribution,Taxes)
str(taxes1)
taxes1$taxes= str_split(string = taxes1$taxes,
pattern = '%',
simplify = T)[,1]
str(taxes1)
taxes1$Taxes = as.numeric(taxes1$taxes)
plot(Distribution,taxes)
plot(Distribution,taxes)
View(base_final)
setwd("~/PUCP/6to CICLO/ANAL POL COMPARADO (POL231)/Estadística/estadisticaWinny")
link1= "https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_3.xlsx"
library(rio)
data_woman=import(link)
data_woman=import(link1)
View(data_woman)
names(data_woman)
View(data_woman)
link2="https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_2.xlsx"
link2="https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_2.xlsx"
gender_gap=import(link2)
View(gender_gap)
View(data_woman)
gender_gap[,-c(3:6)]
gender_gap=gender_gap[,-c(3:6)]
gender_gap=gender_gap[,-c(3:6)]
gender_gap$...1=NULL
gender_gap=gender_gap[,-c(3:8)]
View(gender_gap)
gender_gap=gender_gap[,-c(3:5)]
gender_gap$...11=NULL
link2="https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_2.xlsx"
gender_gap=import(link2)
View(gender_gap)
gender_gap=gender_gap[,-c(3:8), (10:26)]
gender_gap=gender_gap[,-c(3:8),(10:26)]
gender_gap=gender_gap[,-c(3:8),(10:26)]
gender_gap=gender_gap[,-c(3:8),(10:26)]
View(gender_gap)
link2="https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_2.xlsx"
gender_gap=import(link2)
View(gender_gap)
gender_gap=gender_gap[,-c(3:14),(16:26)]
gender_gap=gender_gap[,-c(3:14),(16:26)]
link2="https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_2.xlsx"
gender_gap=import(link2)
gender_gap=gender_gap[,-c(3:13)]
gender_gap=gender_gap[,-c(3:13)]
link2="https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_2.xlsx"
gender_gap=import(link2)
gender_gap=gender_gap[,-c(3:8)]
gender_gap=gender_gap[,-c(3:8)]
gender_gap=gender_gap[,-c(1, 3:8)]
View(gender_gap)
link2="https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_2.xlsx"
gender_gap=import(link2)
gender_gap=gender_gap[,-c(1, 3:10)]
View(gender_gap)
gender_gap=gender_gap[,-c(2:5)]
gender_gap=gender_gap[,-c(3:13)]
gender_gap=gender_gap[-c(1:14, 230:272),]
names(gender_gap)
names(gender_gap) = c("Pais", "desempleo")
names(gender_gap)
gender_gap=gender_gap[-c(77)]
link2="https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_2.xlsx"
gender_gap=import(link2)
View(gender_gap)
gender_gap=gender_gap[,-c(1, 3:10)]
gender_gap=gender_gap[,-c(2:5)]
gender_gap=gender_gap[-c(1:14, 230:272),]
gender_gap=gender_gap[,-c(2:5)]
gender_gap=gender_gap[-c(1:14, 230:272),]
link2="https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_2.xlsx"
gender_gap=import(link2)
View(gender_gap)
gender_gap=gender_gap[,-c(1, 3:10)]
gender_gap=gender_gap[,-c(2:5)]
gender_gap=gender_gap[,-c(3:13)]
gender_gap=gender_gap[-c(1:14, 77, 132, 170, 207, 214:272),]
names(gender_gap) = c("Pais", "desempleo")
'Bolivia (Plurinational State of)',"Pais"]="Bolivia"
gender_gap[gender_gap$Pais=='Bolivia (Plurinational State of)',"Pais"]
gender_gap[gender_gap$Pais=='Bolivia (Plurinational State of)',"Pais"]="Bolivia"
gender_gap[gender_gap$Pais=='	Venezuela (Bolivarian Republic of)',"Pais"]="Venezuela"
gender_gap[gender_gap$Pais=='Venezuela (Bolivarian Republic of)',"Pais"]="Venezuela"
gender_gap[gender_gap$Pais=='Hong Kong, China (SAR)',"Pais"]="Hong Kong, China"
gender_gap[gender_gap$Pais=='Iran (Islamic Republic of)',"Pais"]="Iran, Islamic Republic of"
gender_gap[gender_gap$Pais=='Korea (Republic of)',"Pais"]="Korea, Republic of"
gender_gap[gender_gap$Pais=='Moldova (Republic of)',"Pais"]="Moldova, Republic of"
library(rio)
link1= "https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_3.xlsx"
data_woman=import(link1)
names(data_woman)
link2="https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_2.xlsx"
gender_gap=import(link2)
View(gender_gap)
gender_gap=gender_gap[,-c(1, 3:10)]
gender_gap=gender_gap[,-c(2:5)]
gender_gap=gender_gap[,-c(3:13)]
gender_gap=gender_gap[-c(1:14, 77, 132, 170, 207, 214:272),]
names(gender_gap) = c("Country", "Unemployment")
View(data_woman)
data_woman=data_woman[,-c(1, 3:24, 26:28)]
data_woman=data_woman[-c(1:12, 75, 130, 168, 212:267),]
link1= "https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_3.xlsx"
data_woman=import(link1)
names(data_woman)
View(data_woman)
data_woman=data_woman[,-c(1, 3:24, 26:28)]
data_woman=data_woman[-c(1:12, 75, 130, 168, 205, 212:267),]
names(data_woman) = c("Country", "Account")
data_woman = gsub('..'," ",data_woman)
link1= "https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_3.xlsx"
data_woman=import(link1)
names(data_woman)
View(data_woman)
#eliminamos columnas
data_woman=data_woman[,-c(1, 3:24, 26:28)]
#eliminamos filas
data_woman=data_woman[-c(1:12, 75, 130, 168, 205, 212:267),]
names(data_woman) = c("Country", "Account")
data_woman$Account = gsub('..'," ",data_woman$Account)
link1= "https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_3.xlsx"
data_woman=import(link1)
names(data_woman
#eliminamos columnas
data_woman=data_woman[,-c(1, 3:24, 26:28)]
View(data_woman)
data_woman=data_woman[,-c(1, 3:24, 26:28)]
data_woman=data_woman[-c(1:12, 75, 130, 168, 205, 212:267),]
names(data_woman) = c("Country", "Account")
data_woman$Account = gsub('..',"",data_woman$Account)
link1= "https://github.com/Winny-calderon/estadisticaWinny/raw/master/hdro_statistical_data_dashboard_3.xlsx"
data_woman=import(link1)
names(data_woman)
#eliminamos columnas
data_woman=data_woman[,-c(1, 3:24, 26:28)]
#eliminamos filas
data_woman=data_woman[-c(1:12, 75, 130, 168, 205, 212:267),]
names(data_woman) = c("Country", "Account")
names(gender_gap)
names(data_woman)
merge(gender_gap,data_woman,by.x='Country', by.y='Country')
str(data_woman)
data_woman$Account = as.numeric(data_woman$Account)
str(data_woman)
str(gender_gap)
gender_gap$Unemployment = as.numeric(gender_gap$Unemployment)
str(gender_gap)
merge(gender_gap,data_woman,by.x='Country', by.y='Country')
gender_data=merge(gender_gap,data_woman,by.x='Country', by.y='Country')
head(gender_data)
gender_data2=merge(gender_gap,data_woman,all.x=T,all.y=T)
gender_data2
gender_data[duplicated(gender_data$Country),]
gender_data2[!complete.cases(gender_data2),]
View(gender_data)
gender_data[gender_data$Country=='Bolivia (Plurinational State of)',"Country"]="Bolivia, Plurinational State of"
gender_data[gender_data$Country=='Congo (Democratic Republic of the)',"Country"]="Congo, Democratic Republic of the"
gender_data[gender_data$Country=='Eswatini (Kingdom of)',"Country"]="Eswatini, Kingdom of"
gender_data[gender_data$Country=='Hong Kong, China (SAR)',"Country"]="Hong Kong, China"
gender_data[gender_data$Country=='Iran (Islamic Republic of)',"Country"]="Iran, Islamic Republic of"
gender_data[gender_data$Country=='Korea (Republic of)',"Country"]="Korea, Republic of"
gender_data[gender_data$Country=='Micronesia (Federated States of)',"Country"]="Micronesia, Federated States of"
gender_data[gender_data$Country=='Moldova (Republic of)',"Country"]="Moldova, Republic of"
gender_data[gender_data$Country=='Tanzania (United Republic of)',"Country"]="Tanzania, United Republic of"
gender_data[gender_data$Country=='Venezuela (Bolivarian Republic of)',"Country"]="Venezuela, Bolivarian Republic of"
gender_data[gender_data$Country=='Korea (Democratic People's Rep. of)',"Country"]="Korea, Democratic People's Rep. of"
"Korea (Democratic People's Rep. of)","Country"]="Korea, Democratic People's Rep. of"
head(gender_data)
library(rio)
export(gender_data, "genderData.csv")
export(gender_data, "GenderData.csv")
library(rio)
link2="https://github.com/Winny-calderon/Proyecto-EAP2/raw/master/hdro_statistical_data_dashboard_2.xlsx"
gender_gap=import(link2)
names(gender_gap)
link1= "https://github.com/Winny-calderon/Proyecto-EAP2/raw/master/hdro_statistical_data_dashboard_3.xlsx"
data_woman=import(link1)
names(data_woman)
View(gender_gap)
gender_gap=gender_gap[,-c(1, 3:10)]
gender_gap=gender_gap[,-c(2:5)]
gender_gap=gender_gap[,-c(3:13)]
gender_gap=gender_gap[-c(1:14, 77, 132, 170, 207, 214:272),]
names(gender_gap) = c("Country", "Unemployment")
str(gender_gap)
gender_gap$Unemployment = as.numeric(gender_gap$Unemployment)
str(gender_gap)
link1= "https://github.com/Winny-calderon/Proyecto-EAP2/raw/master/hdro_statistical_data_dashboard_3.xlsx"
data_woman=import(link1)
names(data_woman)
View(data_woman)
data_woman=data_woman[,-c(1, 3:24, 26:28)]
data_woman=data_woman[-c(1:12, 75, 130, 168, 205, 212:267),]
names(data_woman) = c("Country", "Account")
str(data_woman)
data_woman$Account = as.numeric(data_woman$Account)
str(data_woman)
names(gender_gap)
names(data_woman)
gender_data=merge(gender_gap,data_woman,by.x='Country', by.y='Country')
head(gender_data)
gender_data2=merge(gender_gap,data_woman,all.x=T,all.y=T)
gender_data2
gender_data[duplicated(gender_data$Country),]
View(gender_data2)
#Bolivia (Plurinational State of)
gender_data[gender_data$Country=='Bolivia (Plurinational State of)',"Country"]="Bolivia"
#Congo (Democratic Republic of the)
gender_data[gender_data$Country=='Congo (Democratic Republic of the)',"Country"]="Congo, Democratic Republic of the"
#Eswatini (Kingdom of)
gender_data[gender_data$Country=='Eswatini (Kingdom of)',"Country"]="Eswatini, Kingdom of"
#Hong Kong, China (SAR)
gender_data[gender_data$Country=='Hong Kong, China (SAR)',"Country"]="Hong Kong, China"
#Iran (Islamic Republic of)
gender_data[gender_data$Country=='Iran (Islamic Republic of)',"Country"]="Iran, Islamic Republic of"
#Korea (Republic of)
gender_data[gender_data$Country=='Korea (Republic of)',"Country"]="Korea, Republic of"
#Micronesia (Federated States of)
gender_data[gender_data$Country=='Micronesia (Federated States of)',"Country"]="Micronesia, Federated States of"
#Moldova (Republic of)
gender_data[gender_data$Country=='Moldova (Republic of)',"Country"]="Moldova, Republic of"
#Tanzania (United Republic of)
gender_data[gender_data$Country=='Tanzania (United Republic of)',"Country"]="Tanzania, United Republic of"
#Venezuela (Bolivarian Republic of)
gender_data[gender_data$Country=='Venezuela (Bolivarian Republic of)',"Country"]="Venezuela, Bolivarian Republic of"
View(gender_data2)
View(gender_data2)
View(gender_data)
export(gender_data, "GenderData.csv")
